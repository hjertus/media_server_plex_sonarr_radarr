version: '3.9'

services:

  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    hostname: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    env_file:
      - .env
    volumes:
      - ./provision/gluetun:/gluetun
    restart: unless-stopped
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8080:8080 #qBittorrent
      - 9117:9117 #Jackett
      - 8989:8989 #Sonarr
      - 9696:9696 #Prowlarr
      - 7878:7878 #Radarr
      - 8686:8686 #Lidarr
      - 6767:6767 #Bazarr
      - 8191:8191 #FlareSolverr
    environment:
      - VPN_SERVICE_PROVIDER=nordvpn
      - VPN_TYPE=openvpn # or wireguard
      - OPENVPN_USER=8o51U1FGEbcHwh44wTtndCG5
      - OPENVPN_PASSWORD=JYRrq3bpAXG921MB7LuPgJWH
      - SERVER_COUNTRIES=Norway
  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    network_mode: host
    env_file:
      - .env
    environment:
      - VERSION=docker
      - HOSTNAME=”PlexServer”
    volumes:
      - ./provision/plex:/config
      - ./content/media:/data/media
    # ports: # when network: bridge
    #   - "32400:32400/tcp"
    #   - "8324:8324/tcp" # Required if network: bridge
    #   - "32469:32469/tcp" # Required if network: bridge
    #   - "1900:1900/udp" # Required if network: bridge
    #   - "32410:32410/udp" # Required if network: bridge
    #   - "32412:32412/udp" # Required if network: bridge
    #   - "32413:32413/udp" # Required if network: bridge
    #   - "32414:32414/udp" # Required if network: bridge
    privileged: true # libusb_init failed
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    network_mode: "service:gluetun"
    env_file:
      - .env
    volumes:
      - ./provision/radarr:/config
      - ./content:/data
      - ./content/downloads:/data/downloads
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: "service:gluetun"
    env_file:
      - .env
    volumes:
      - ./provision/sonarr:/config
      - ./content:/data
    restart: unless-stopped

  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    network_mode: "service:gluetun"
    env_file:
      - .env
    volumes:
      - ./provision/lidarr:/config
      - ./content:/data
    restart: unless-stopped

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: "service:gluetun"
    env_file:
      - .env
    volumes:
      - ./provision/prowlarr:/config
    restart: unless-stopped

  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    network_mode: "service:gluetun"
    env_file:
      - .env
    volumes:
      - ./provision/bazarr:/config
      - ./content:/data
    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"
    env_file:
      - .env
    volumes:
      - ./provision/qbittorrent:/config
      - ./content/downloads:/downloads
    restart: unless-stopped
    depends_on:
      - gluetun

  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    network_mode: "service:gluetun"
    env_file:
      - .env
    volumes:
      - ./provision/jackett:/config
    restart: unless-stopped

  ombi:
    image: linuxserver/ombi:latest
    container_name: ombi
    network_mode: host
    env_file:
      - .env
    volumes:
      - ./provision/ombi:/config
    ports:
      - "3579:3579"
    restart: unless-stopped

  heimdall:
    image: linuxserver/heimdall:latest
    container_name: heimdall
    network_mode: host
    env_file:
      - .env
    volumes:
      - ./provision/heimdall:/config
    ports:
      - "80:80"
      - "443:443"
      # - "8083:80"
    restart: unless-stopped

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    network_mode: host
    env_file:
      - .env
    volumes:
      - ./provision/overseerr:/config
    ports:
      - "5055:5055"
    restart: unless-stopped

  flareSolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flareSolverr
    network_mode: "service:gluetun"
    env_file:
      - .env
    volumes:
      - ./provision/flaresolverr:/config
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup
    restart: unless-stopped